% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SphericalEllipse.R
\name{ellipsoidalEllipse}
\alias{ellipsoidalEllipse}
\title{Ellipsoidal Ellipse}
\usage{
ellipsoidalEllipse(
  p1,
  p2,
  d,
  n.pts = 50,
  a = 6378137,
  f = 1/298.257223563,
  n.iters = 2 + max(6, ceiling(log2(d)))
)
}
\arguments{
\item{p1}{a vector of length 2 giving the longitude and latitude
of the first focal point.}

\item{p2}{a vector of length 2 giving the longitude and latitude
of the second focal point.}

\item{d}{the combined distance from the two focal points to a
point on the ellipse.}

\item{n.pts}{number of points to generate.}

\item{a}{major (equatorial) radius of the ellipsoid (default is
for WGS84).}

\item{f}{ellipsoid flattening (default is for WGS84).}

\item{n.iters}{number of bisection iterations.}
}
\value{
an n x 2 matrix of longitudes and latitudes of points on
the ellipse.
}
\description{
Calculate points on a ellipse on the surface of the Earth.
}
\details{
An ellipsoidal ellipse is the locus of points on an ellipsoid for
which the sum of geodesic distances to two focal points on the
ellipsoid is a constant.

Given the latitude and longitude of two focal points \code{p1} and
\code{p2}, this function calculates the longitude and latitude of a
sequence of points of the Earth for which the sum of the geodesic
distances to the focal points is \code{d}.

The final point is identical to the first. If \code{d} is less than the
inter-focal distance, the function returns \code{NULL}.

This implementation constructs points on the ellipse by computing
the distance to the ellipse along n evenly spaced bearings from
the midpoint of the foci using a bisection procedure. The accuracy
of the procedure is approximately d/2^iters.

This function is based upon \code{\link[geosphere:distGeo]{geosphere::distGeo()}} and an
explanation of the parameters \code{a} and \code{f} can be found there.

For most applications, \code{\link[=sphericalEllipse]{sphericalEllipse()}} provides an adequate
approximation that is more efficient to compute.
}
\examples{
p1 <- c(140,-45)
p2 <- c(143,-40)
ps <- ellipsoidalEllipse(p1,p2,900000)
plot(ps,type="l",xlab="Lon",ylab="Lat")
points(rbind(p1,p2),col="red",pch=16)
}
\seealso{
\code{\link[=sphericalEllipse]{sphericalEllipse()}}
}
